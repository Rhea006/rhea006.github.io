<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rhea&#39;s Blog</title>
  
  
  <link href="https://rhea006.github.io/atom.xml" rel="self"/>
  
  <link href="https://rhea006.github.io/"/>
  <updated>2025-06-15T10:09:00.203Z</updated>
  <id>https://rhea006.github.io/</id>
  
  <author>
    <name>Rhea</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/3ebf44883f8a.html"/>
    <id>https://rhea006.github.io/2025/06/3ebf44883f8a.html</id>
    <published>2025-06-15T08:18:40.079Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>sudo -i #root用户<br> ls -l &#x2F;etc&#x2F;netplan<br>![[Pasted image 20250601205045.png]]<br>sudo chmod 600 &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml  #修改文件权限<br>sudo nano &#x2F;etc&#x2F;netplan&#x2F;01-network-manager-all.yaml  #更新配置文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: NetworkManager</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.142.132/24]         # 设置静态IP地址和掩码</span><br><span class="line">      routes:</span><br><span class="line">        - to: default</span><br><span class="line">          via: 192.168.142.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [114.114.114.114,8.8.8.8]  # 设置主、备DNS</span><br><span class="line">      dhcp4: false                            # 禁用dhcp</span><br></pre></td></tr></table></figure><p>sudo netplan apply  #应用更改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#验证配置</span><br><span class="line">ip a show ens33</span><br><span class="line">ping -c 4 8.8.8.8   </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#确保SSH服务正常运行</span><br><span class="line">sudo apt install openssh-server</span><br><span class="line">sudo systemctl start ssh</span><br><span class="line">sudo systemctl enable ssh</span><br></pre></td></tr></table></figure><p>![[Pasted image 20250601213334.png]]</p><h4 id="使用-SSH-密钥登录（最安全）"><a href="#使用-SSH-密钥登录（最安全）" class="headerlink" title="使用 SSH 密钥登录（最安全）"></a><strong>使用 SSH 密钥登录（最安全）</strong></h4><ol><li>在物理机生成密钥对：<br> ssh-keygen  # 默认保存到 ~&#x2F;.ssh&#x2F;id_rsa&#x3D;&#x3D;(空密码)&#x3D;&#x3D;<br> ![[Pasted image 20250601214315.png]]</li><li>将公钥复制到虚拟机：<br> scp C:\Users\Rhea.ssh\id_rsa.pub <a href="mailto:&#x72;&#x68;&#101;&#x61;&#64;&#x31;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#46;&#49;&#52;&#50;&#46;&#x31;&#51;&#x32;">rhea@192.168.142.132</a>:~&#x2F;<br> ![[Pasted image 20250601214846.png]]</li><li>直接免密登录：<br> ![[Pasted image 20250601221831.png]]</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;sudo -i #root用户&lt;br&gt; ls -l &amp;#x2F;etc&amp;#x2F;netplan&lt;br&gt;![[Pasted image 20250601205045.png]]&lt;br&gt;sudo chmod 600 &amp;#x2F;etc&amp;#x2F;netplan&amp;#x2F;01</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/8fef3bd1f07c.html"/>
    <id>https://rhea006.github.io/2025/06/8fef3bd1f07c.html</id>
    <published>2025-06-15T08:18:40.078Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p><code>sudo nano /etc/apt/apt.conf.d/20auto-upgrades</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">APT::Periodic::Update-Package-Lists &quot;0&quot;;</span><br><span class="line">APT::Periodic::Download-Upgradeable-Packages &quot;0&quot;;</span><br><span class="line">APT::Periodic::AutocleanInterval &quot;0&quot;;</span><br><span class="line">APT::Periodic::Unattended-Upgrade &quot;0&quot;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;sudo nano /etc/apt/apt.conf.d/20auto-upgrades&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/b47dd08fda7e.html"/>
    <id>https://rhea006.github.io/2025/06/b47dd08fda7e.html</id>
    <published>2025-06-15T08:18:40.071Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Types: deb</span><br><span class="line">URIs: http://mirrors.ustc.edu.cn/ubuntu/</span><br><span class="line">Suites: noble noble-updates noble-security</span><br><span class="line">Components: main restricted universe multiverse</span><br><span class="line">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://rhea006.github.io/categories/Ubuntu/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/dcf6e19d0c6b.html"/>
    <id>https://rhea006.github.io/2025/06/dcf6e19d0c6b.html</id>
    <published>2025-06-15T08:18:30.716Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>bp抓包<br>![[{3AD6ED26-D5D6-4348-AF13-B5279A3A9036}.png]]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET：?FantasyLand=0xLE4KCODE</span><br><span class="line">POST：lyc0ris=goat</span><br><span class="line"></span><br><span class="line">请求头：</span><br><span class="line">Referer: https://www.tzc.edu.cn/</span><br><span class="line">User-Agent: SansBrowser</span><br><span class="line">Cookie: user=admin</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br></pre></td></tr></table></figure><p>用hackbar也行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;bp抓包&lt;br&gt;![[{3AD6ED26-D5D6-4348-AF13-B5279A3A9036}.png]]&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span </summary>
      
    
    
    
    <category term="WEB" scheme="https://rhea006.github.io/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/7607b4665f24.html"/>
    <id>https://rhea006.github.io/2025/06/7607b4665f24.html</id>
    <published>2025-06-15T08:18:20.849Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>放大![[{051C5CE7-A087-4021-8A67-CA44B66376DE}.png]]<br>110011011011001100001110011111110111010111011000010101110101010110011011101011101110110111011110011111101<br>&#x3D;&#x3D;<strong>ASCII是7位</strong>&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string = &#x27;110011011011001100001110011111110111010111011000010101110101010110011011101011101110110111011110011111101&#x27;</span><br><span class="line"> </span><br><span class="line">flag = &#x27;&#x27;</span><br><span class="line">for i in range(0, len(string), 7):</span><br><span class="line">    bin_str = string[i: i + 7]</span><br><span class="line">    flag += chr(int(bin_str, 2))</span><br><span class="line"> </span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>flag{W0W*funny}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;放大![[{051C5CE7-A087-4021-8A67-CA44B66376DE}.png]]&lt;br&gt;110011011011001100001110011111110111010111011000010101110101010110011011101011101110</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="音频" scheme="https://rhea006.github.io/categories/MISC/%E9%9F%B3%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/ca760e6660a8.html"/>
    <id>https://rhea006.github.io/2025/06/ca760e6660a8.html</id>
    <published>2025-06-15T08:18:20.848Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf your_file.wav #从 WAV 文件中提取隐藏数据</span><br></pre></td></tr></table></figure><p>![[{BEE0A87B-FE33-46DE-B36F-EB728163008C}.png]]<br>&#x3D;&#x3D;<strong>要转换的文件放在它的文件夹下</strong>&#x3D;&#x3D;<br>![[{11E69F33-84F4-4962-A257-E294ED63D946}.png]]<br>TZCFlag{steghide_is_so_interesting}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="音频" scheme="https://rhea006.github.io/categories/MISC/%E9%9F%B3%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/442dd368d7d9.html"/>
    <id>https://rhea006.github.io/2025/06/442dd368d7d9.html</id>
    <published>2025-06-15T08:18:20.845Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>打开频谱图<br>![[{2D31FA56-C817-4AC6-A587-C9008BA90B74}.png]]</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开频谱图&lt;br&gt;![[{2D31FA56-C817-4AC6-A587-C9008BA90B74}.png]]&lt;/p&gt;
</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="音频" scheme="https://rhea006.github.io/categories/MISC/%E9%9F%B3%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/754e741a5cac.html"/>
    <id>https://rhea006.github.io/2025/06/754e741a5cac.html</id>
    <published>2025-06-15T08:18:20.841Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>![[Pasted image 20250604133850.png]]<br>错的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![[Pasted image 20250604133850.png]]&lt;br&gt;错的&lt;/p&gt;
</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="综合" scheme="https://rhea006.github.io/categories/MISC/%E7%BB%BC%E5%90%88/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/b75e0d98391e.html"/>
    <id>https://rhea006.github.io/2025/06/b75e0d98391e.html</id>
    <published>2025-06-15T08:18:20.832Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="码类" scheme="https://rhea006.github.io/categories/MISC/%E7%A0%81%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/3c18f35ef18f.html"/>
    <id>https://rhea006.github.io/2025/06/3c18f35ef18f.html</id>
    <published>2025-06-15T08:18:20.830Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>![[flag11.png]]<br>![[{B7FFEEE2-E071-41DC-A3E3-4BDA0719A462}.png]]<br>![[Pasted image 20250604104025.png]]<br>![[Pasted image 20250604104046.png]]<br>![[Pasted image 20250604105300.png]]<br>![[{3E1FFA08-BA9D-4AA5-8A9A-6D469456C255}.png]]<br>![[{CE52806F-ECC7-47DF-8A20-7224D63472F8}.png]]<br>cumtctf{1sb_i4_s0_Ea4y}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![[flag11.png]]&lt;br&gt;![[{B7FFEEE2-E071-41DC-A3E3-4BDA0719A462}.png]]&lt;br&gt;![[Pasted image 20250604104025.png]]&lt;br&gt;![[Pasted image 20250604104</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="图片" scheme="https://rhea006.github.io/categories/MISC/%E5%9B%BE%E7%89%87/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/a3335859427a.html"/>
    <id>https://rhea006.github.io/2025/06/a3335859427a.html</id>
    <published>2025-06-15T08:18:20.828Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>![[out.jpg]]<br>![[Pasted image 20250604103412.png]]<br>TZCFlag{copy_is_useful}<br>&#x3D;&#x3D;图片下面有字隐藏其实，用stegsolve&#x3D;&#x3D;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![[out.jpg]]&lt;br&gt;![[Pasted image 20250604103412.png]]&lt;br&gt;TZCFlag{copy_is_useful}&lt;br&gt;&amp;#x3D;&amp;#x3D;图片下面有字隐藏其实，用stegsolve&amp;#x3D;&amp;#x3D;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="图片" scheme="https://rhea006.github.io/categories/MISC/%E5%9B%BE%E7%89%87/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/ec7d85120ff9.html"/>
    <id>https://rhea006.github.io/2025/06/ec7d85120ff9.html</id>
    <published>2025-06-15T08:18:20.823Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="压缩包" scheme="https://rhea006.github.io/categories/MISC/%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/615c0dc5718d.html"/>
    <id>https://rhea006.github.io/2025/06/615c0dc5718d.html</id>
    <published>2025-06-15T08:18:20.822Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>![[Pasted image 20250604125245.png]]TZCFlag{the_passw0rd_is_sooo_weak}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![[Pasted image 20250604125245.png]]TZCFlag{the_passw0rd_is_sooo_weak}&lt;/p&gt;
</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="压缩包" scheme="https://rhea006.github.io/categories/MISC/%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/e6857e85c451.html"/>
    <id>https://rhea006.github.io/2025/06/e6857e85c451.html</id>
    <published>2025-06-15T08:18:20.811Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>![[{57FCDD10-AE2B-4DBF-8DE9-1B19984A5445}.png]]<br>把pdf改成压缩包</p><p>![[Pasted image 20250604130730.png]]<br>![[{9FF4A261-2915-4D42-B8F4-FFA1CA8AB5E5}.png]]<br>有问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;![[{57FCDD10-AE2B-4DBF-8DE9-1B19984A5445}.png]]&lt;br&gt;把pdf改成压缩包&lt;/p&gt;
&lt;p&gt;![[Pasted image 20250604130730.png]]&lt;br&gt;![[{9FF4A261-2915-4D42-B8F4-F</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="压缩包" scheme="https://rhea006.github.io/categories/MISC/%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/80b026052d2d.html"/>
    <id>https://rhea006.github.io/2025/06/80b026052d2d.html</id>
    <published>2025-06-15T08:18:20.810Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>小强找到自己的压箱底学习资料，但是发现有密码，他隐约记得密码是长 <code>AQ***g0**0</code>，中间 <code>*</code> 号只记得是小写字母和数字，你能帮他找回密码吗<br>![[Pasted image 20250604130116.png]]<br>![[Pasted image 20250604130408.png]]TZCFlag{th3_password_1s_s0_so_weak}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小强找到自己的压箱底学习资料，但是发现有密码，他隐约记得密码是长 &lt;code&gt;AQ***g0**0&lt;/code&gt;，中间 &lt;code&gt;*&lt;/code&gt; 号只记得是小写字母和数字，你能帮他找回密码吗&lt;br&gt;![[Pasted image 20250604130116.png]]</summary>
      
    
    
    
    <category term="MISC" scheme="https://rhea006.github.io/categories/MISC/"/>
    
    <category term="压缩包" scheme="https://rhea006.github.io/categories/MISC/%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/f34d247f95a9.html"/>
    <id>https://rhea006.github.io/2025/06/f34d247f95a9.html</id>
    <published>2025-06-15T08:17:05.529Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>在一次RSA密钥对生成中，假设p&#x3D;473398607161，q&#x3D;4511491，e&#x3D;17<br>求解出d作为flga提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p=473398607161</span><br><span class="line">q=4511491</span><br><span class="line">e=17</span><br><span class="line">z=(p-1)*(q-1) #欧拉函数</span><br><span class="line">d = pow(e, -1, z) #(e * d) % z == 1 </span><br><span class="line">#m = pow(c, d, n)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">p = 473398607161 </span><br><span class="line">q = 4511491 </span><br><span class="line">e = 17 </span><br><span class="line">z = (p - 1) * (q - 1) </span><br><span class="line">d = gmpy2.invert(e, z) # e*d mod z = 1</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>![[{398FE444-FE62-474E-8333-9D51EDA83FEB}.png]]<br>右键<br>![[Pasted image 20250603090548.png]]<br>125631357777427553</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在一次RSA密钥对生成中，假设p&amp;#x3D;473398607161，q&amp;#x3D;4511491，e&amp;#x3D;17&lt;br&gt;求解出d作为flga提交&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    <category term="RSA" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/d790324ef4d5.html"/>
    <id>https://rhea006.github.io/2025/06/d790324ef4d5.html</id>
    <published>2025-06-15T08:17:05.529Z</published>
    <updated>2025-06-15T10:09:00.204Z</updated>
    
    <content type="html"><![CDATA[<p>n1&#x3D;9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327<br>n2&#x3D;13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743<br>e &#x3D; 65537<br>c &#x3D; 268065307799668245100155583656026011160002952385077142247208270849202533959057073328593124609246618255434974771312005129546891196910224298782988830299931466177092252318898389606108682805827112298601665236639013976557584096409090034724959181393317682380243407722802135226000120577664046248111234520151522261820924236477640240403636122092626752359753454045971441763375027128396562369686719452592987407716592442173485676980456821015690717339269128488747739318128952772386390939524794974383676486458446499596610588</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">from math import gcd </span><br><span class="line">from sympy import mod_inverse </span><br><span class="line">n1 = 9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327 </span><br><span class="line">n2 = 13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743</span><br><span class="line">c = 268065307799668245100155583656026011160002952385077142247208270849202533959057073328593124609246618255434974771312005129546891196910224298782988830299931466177092252318898389606108682805827112298601665236639013976557584096409090034724959181393317682380243407722802135226000120577664046248111234520151522261820924236477640240403636122092626752359753454045971441763375027128396562369686719452592987407716592442173485676980456821015690717339269128488747739318128952772386390939524794974383676486458446499596610588 </span><br><span class="line"></span><br><span class="line">e = 65537 </span><br><span class="line"></span><br><span class="line">p = gcd(n1, n2) # 计算gcd(n1, n2) </span><br><span class="line"></span><br><span class="line">if p &gt; 1: </span><br><span class="line">print(f&quot;发现共享素因数 p = &#123;p&#125;&quot;)</span><br><span class="line"></span><br><span class="line"># 计算另一个素因数 </span><br><span class="line">q1 = n1 // p </span><br><span class="line">q2 = n2 // p </span><br><span class="line"></span><br><span class="line"># 计算φ(n) </span><br><span class="line">phi_n1 = (p - 1) * (q1 - 1) </span><br><span class="line">phi_n2 = (p - 1) * (q2 - 1) </span><br><span class="line"></span><br><span class="line"># 计算私钥d </span><br><span class="line">d1 = mod_inverse(e, phi_n1) </span><br><span class="line">d2 = mod_inverse(e, phi_n2) </span><br><span class="line"></span><br><span class="line"># 解密 </span><br><span class="line">m1 = pow(c, d1, n1) </span><br><span class="line">m2 = pow(c, d2, n2) </span><br><span class="line"></span><br><span class="line"># 转换为ASCII </span><br><span class="line">def num_to_ascii(m):</span><br><span class="line">m_bytes = m.to_bytes((m.bit_length() + 7) // 8, byteorder=&#x27;big&#x27;) </span><br><span class="line">return   m_bytes.decode(&#x27;utf-8&#x27;, errors=&#x27;ignore&#x27;) </span><br><span class="line">flag1 = num_to_ascii(m1)</span><br><span class="line">flag2 = num_to_ascii(m2) </span><br><span class="line">print(f&quot;flag1 = &#123;flag1&#125;&quot;) </span><br><span class="line">print(f&quot;flag2 = &#123;flag2&#125;&quot;)</span><br><span class="line">else: </span><br><span class="line">print(&quot;未发现共享素因数，需要其他方法分解模数&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现共享素因数 p &#x3D; 1564859779720039565508870182569324208117555667917997801104862601098933699462849007879184203051278194180664616470669559575370868384820368930104560074538872199213236203822337186927275879139590248731148622362880471439310489228147093224418374555428793546002109</p><p>flag1 &#x3D; TZCFlag{I_love_rsa}</p><p>flag2 &#x3D; SN96LdJnS}%?;Z#:n,zzpQ4&#96;9Jv#a?MZ”HZHj</p><p>q审_Pd,&#x3D;R&lt;w^y(iGma,84&gt;uԌUE!t&#x3D;턢u’Q9ݩ}g<br>2.H*~Sm:!eDA</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;n1&amp;#x3D;905101396540408448287008786482145553515900869604295302196563108909579534883095438312732385327252896772931104517960540769359266568</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    <category term="RSA" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/RSA/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/6d7acdda0095.html"/>
    <id>https://rhea006.github.io/2025/06/6d7acdda0095.html</id>
    <published>2025-06-15T08:17:05.520Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p>p &#x3D; 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229<br>q &#x3D; 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469<br>dp &#x3D; 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929<br>dq &#x3D; 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041<br>c &#x3D; 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</p><p>&#x3D;&#x3D;dp,dq  是<code>d</code>模<code>p-1</code>和<code>q-1</code>的模逆元（在RSA中，它们通常用于快速解密，因为使用它们可以避免计算<code>d</code>，这是一个大数。&#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">from Crypto.Util.number import long_to_bytes   #将长整数转化为字节字符串</span><br><span class="line"> </span><br><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br><span class="line"> </span><br><span class="line">I = gmpy2.invert(q, p) </span><br><span class="line"> # 计算了q模p的模逆元。在数学上，这意味着I是一个整数，使得q * I mod p = 1。注意，这里的I并不是中国剩余定理中常用的h（h是p模q的模逆元），但在这个上下文中，我们只需要I</span><br><span class="line"> </span><br><span class="line">mp = pow(c, dp, p)   #使用模幂运算，计算c的dp次方模p的结果。</span><br><span class="line">mq = pow(c, dq, q)   #使用模幂运算，计算c的dq次方模q的结果。</span><br><span class="line"> </span><br><span class="line">m = (((mp-mq) * I) % p) * q + mq      #CRT的一个变种，用于从mp和mq中恢复明文m</span><br><span class="line"> </span><br><span class="line">print(long_to_bytes(m))    #解密后的整数m转换为字节字符串并输出 </span><br></pre></td></tr></table></figure><p> b’noxCTF{W31c0m3_70_Ch1n470wn}’→flag{W31c0m3_70_Ch1n470wn}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;p &amp;#x3D; 86376337672570085670996534865410911713204915094336154475391624379112441758856678063984117905240835534451581135022277452062053276</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/cc5fb9611ed1.html"/>
    <id>https://rhea006.github.io/2025/06/cc5fb9611ed1.html</id>
    <published>2025-06-15T08:17:05.520Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    <content type="html"><![CDATA[<p><strong>密钥计算方法</strong><br>1.选择两个大素数p和q(典型值为1024位)<br>2.计算<code>n=p×q</code>和<code>z=(p-1)×(q-1)</code><br>&#x2F;&#x2F; n表示欧拉函数<br>3.选择一个与z互质的数，令其为d<br>4.找到一个 e 使满足<code>exd= 1 (mod z)</code><br>5.公开密钥为<code>(e，m)</code>，私有密钥为<code>(d，m)</code><br><strong>密钥举例</strong><br>代码如下（示例）：1.假设需要加密的明文信息为m&#x3D;85，选择：e&#x3D;7，p&#x3D;11，q&#x3D;13，说明使用RSA算法的加密和解密(计算密文并还原)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n=p*q=11*13=143</span><br><span class="line">z=（p-1）*（q-1）=10*12=120</span><br><span class="line"></span><br><span class="line">e*d=1(mod z)  </span><br><span class="line">7 * d( mod 120)=1  -------d=103</span><br></pre></td></tr></table></figure><p>1️⃣加密运算<br>公钥:(e,n)&#x3D;(7,143)<br>密文c&#x3D;p^e (mod n)&#x3D;123<br>2️⃣加密运算<br>密钥:(d,n)&#x3D;(103,143)<br>明文：P&#x3D;c^d (mod n)&#x3D;85</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;密钥计算方法&lt;/strong&gt;&lt;br&gt;1.选择两个大素数p和q(典型值为1024位)&lt;br&gt;2.计算&lt;code&gt;n=p×q&lt;/code&gt;和&lt;code&gt;z=(p-1)×(q-1)&lt;/code&gt;&lt;br&gt;&amp;#x2F;&amp;#x2F; n表示欧拉函数&lt;br&gt;3.选择一个</summary>
      
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rhea006.github.io/2025/06/1075e772c959.html"/>
    <id>https://rhea006.github.io/2025/06/1075e772c959.html</id>
    <published>2025-06-15T08:17:05.519Z</published>
    <updated>2025-06-15T10:09:00.203Z</updated>
    
    
    
    
    <category term="Crypto" scheme="https://rhea006.github.io/categories/Crypto/"/>
    
    <category term="非对称加密（Asymmetric Cryptography）" scheme="https://rhea006.github.io/categories/Crypto/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%EF%BC%88Asymmetric-Cryptography%EF%BC%89/"/>
    
    
  </entry>
  
</feed>
